# Generated by Django 5.1.3 on 2025-06-24 20:20

import django.db.models.deletion
import uvaq.models
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Career',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField()),
                ('duration_semesters', models.PositiveSmallIntegerField()),
                ('total_credits', models.PositiveSmallIntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('faculty', models.CharField(max_length=100)),
                ('accreditation', models.CharField(blank=True, max_length=100)),
                ('accreditation_valid_until', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('notification_type', models.CharField(choices=[('academic', 'Academic'), ('financial', 'Financial'), ('administrative', 'Administrative'), ('event', 'Event'), ('security', 'Security')], max_length=20)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('target_roles', models.CharField(choices=[('student', 'Student'), ('services', 'Services'), ('professor', 'Professor'), ('tester', 'Tester')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('second_last_name', models.CharField(max_length=100)),
                ('birth_date', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('photo', models.URLField(max_length=254)),
                ('digital_signature', models.URLField(blank=True, max_length=254)),
                ('role', models.CharField(choices=[('student', 'Student'), ('services', 'Services'), ('professor', 'Professor'), ('tester', 'Tester')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='StudyPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('version', models.CharField(max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('total_credits', models.PositiveSmallIntegerField()),
                ('required_credits', models.PositiveSmallIntegerField()),
                ('elective_credits', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UniversityInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('identifier', models.CharField(max_length=50)),
                ('additional_info', models.TextField(blank=True)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('website', models.URLField()),
                ('rector', models.CharField(max_length=100)),
                ('foundation_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='AcademicPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=False)),
                ('cohort', models.CharField(max_length=50)),
                ('registration_start', models.DateField()),
                ('registration_end', models.DateField()),
                ('term_code', models.CharField(max_length=20, unique=True)),
                ('parent_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='uvaq.academicperiod')),
            ],
        ),
        migrations.CreateModel(
            name='AcademicRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('graduated', 'Graduated'), ('suspended', 'Suspended'), ('dropped_out', 'Dropped Out')], default='active', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('reason', models.TextField(blank=True)),
                ('comments', models.TextField(blank=True)),
                ('is_regular', models.BooleanField(default=True)),
                ('scholarship', models.CharField(blank=True, max_length=100)),
                ('average', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('withdrawal_date', models.DateField(blank=True, null=True)),
                ('withdrawal_reason', models.CharField(blank=True, max_length=200)),
                ('re_enrollment_date', models.DateField(blank=True, null=True)),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uvaq.academicperiod')),
            ],
        ),
        migrations.CreateModel(
            name='Identification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('curp', models.CharField(db_index=True, max_length=18, unique=True)),
                ('identity_number', models.CharField(max_length=50)),
                ('nationality', models.CharField(max_length=2, validators=[uvaq.models.validate_alpha_2_code])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='identification', to='uvaq.personalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='FinancialInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_debt', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('overdue_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('last_payment_date', models.DateField(blank=True, null=True)),
                ('last_payment_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('payment_plan', models.CharField(blank=True, max_length=100)),
                ('scholarship', models.CharField(blank=True, max_length=100)),
                ('discount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='financial_info', to='uvaq.personalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='EmergencyInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=20)),
                ('relationship', models.CharField(max_length=50)),
                ('secondary_phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('is_primary', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_info', to='uvaq.personalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='ContactInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('cell_phone', models.CharField(blank=True, max_length=20)),
                ('personal_email', models.EmailField(max_length=254)),
                ('institutional_email', models.EmailField(max_length=254, unique=True)),
                ('preferred_contact_method', models.CharField(blank=True, choices=[('whatsapp', 'WhatsApp'), ('phone', 'Phone'), ('cellphone', 'Cellphone'), ('email', 'Email'), ('other', 'Other')], max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contact_info', to='uvaq.personalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='AdmissionData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('found_out_through', models.CharField(blank=True, max_length=100)),
                ('educational_advisor', models.CharField(blank=True, max_length=100)),
                ('comments', models.TextField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admission_data', to='uvaq.personalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='AcademicProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_school', models.CharField(blank=True, max_length=100)),
                ('study_interest', models.CharField(blank=True, max_length=200)),
                ('academic_offer', models.CharField(blank=True, max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='academic_profile', to='uvaq.personalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('professor_id', models.CharField(max_length=50, unique=True)),
                ('department', models.CharField(max_length=100)),
                ('work_hours', models.CharField(max_length=100)),
                ('hire_date', models.DateField()),
                ('academic_degree', models.CharField(max_length=100)),
                ('specialization', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('max_hours_per_week', models.PositiveSmallIntegerField(default=40)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='professor', to='uvaq.personalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=100)),
                ('job_title', models.CharField(max_length=100)),
                ('work_hours', models.CharField(max_length=100)),
                ('staff_id', models.CharField(max_length=50, unique=True)),
                ('hire_date', models.DateField()),
                ('staff_type', models.CharField(choices=[('academic', 'Academic'), ('administrative', 'Administrative'), ('support', 'Support'), ('technical', 'Technical')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('office_location', models.CharField(max_length=100)),
                ('extension', models.CharField(blank=True, max_length=10)),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='uvaq.staffprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_profile', to='uvaq.personalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='Responsibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=True)),
                ('area', models.CharField(max_length=100)),
                ('staff_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsibilities', to='uvaq.staffprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=50, unique=True)),
                ('current_grade', models.CharField(max_length=100)),
                ('admission_type', models.CharField(choices=[('regular', 'Regular Admission'), ('transfer', 'Transfer'), ('special', 'Special Admission'), ('international', 'International Student')], max_length=20)),
                ('study_modality', models.CharField(choices=[('schooling', 'Schooling'), ('mixed', 'Mixed'), ('online', 'Online'), ('intensive', 'Intensive')], max_length=20)),
                ('shift', models.CharField(blank=True, choices=[('morning', 'Morning'), ('afternoon', 'Afternoon'), ('evening', 'Evening'), ('night', 'Night')], max_length=20)),
                ('campus', models.CharField(max_length=100)),
                ('credits_approved', models.PositiveSmallIntegerField(default=0)),
                ('periods_completed', models.PositiveSmallIntegerField(default=0)),
                ('enrollment_date', models.DateField()),
                ('expected_graduation_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('academic_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('graduated', 'Graduated'), ('suspended', 'Suspended'), ('dropped_out', 'Dropped Out')], default='active', max_length=20)),
                ('education_level', models.CharField(choices=[('undergraduate', 'Undergraduate'), ('graduate', 'Graduate'), ('postgraduate', 'Postgraduate')], max_length=20)),
                ('academic_history', models.ManyToManyField(related_name='students_history', through='uvaq.AcademicRecord', to='uvaq.academicperiod')),
                ('admission_period', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='admitted_students', to='uvaq.academicperiod')),
                ('career', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='uvaq.career')),
                ('current_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_students', to='uvaq.academicperiod')),
                ('personal_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='uvaq.personalinformation')),
                ('study_plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='uvaq.studyplan')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('enrollment', 'Inscription'), ('monthly', 'Monthly Payment'), ('degree', 'Degree entitlement'), ('library', 'Library'), ('lab', 'Laboratory'), ('other', 'Other')], max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('partial', 'Partial Payment'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('receipt_number', models.CharField(max_length=50, unique=True)),
                ('payment_method', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('due_date', models.DateField()),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='uvaq.academicperiod')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='uvaq.student')),
            ],
        ),
        migrations.CreateModel(
            name='Graduation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('graduation_date', models.DateField()),
                ('modality', models.CharField(choices=[('thesis', 'Thesis'), ('exam', 'Comprehensive Exam'), ('work_exp', 'Work Experience'), ('special_study', 'Special Study')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('thesis_title', models.CharField(blank=True, max_length=200)),
                ('final_grade', models.DecimalField(decimal_places=2, max_digits=5)),
                ('honors', models.CharField(blank=True, max_length=100)),
                ('ceremony_date', models.DateField(blank=True, null=True)),
                ('diploma_number', models.CharField(max_length=50, unique=True)),
                ('graduation_period', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='uvaq.academicperiod')),
                ('advisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='uvaq.professor')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='graduation', to='uvaq.student')),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField()),
                ('final_grade', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('status', models.CharField(choices=[('approved', 'Approved'), ('failed', 'Failed'), ('in_progress', 'In Progress'), ('withdrawn', 'Withdrawn')], default='in_progress', max_length=20)),
                ('attempt_number', models.PositiveSmallIntegerField(default=1)),
                ('group', models.CharField(max_length=10)),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uvaq.academicperiod')),
                ('professor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='uvaq.professor')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uvaq.student')),
            ],
        ),
        migrations.AddField(
            model_name='academicrecord',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uvaq.student'),
        ),
        migrations.AddField(
            model_name='career',
            name='study_plans',
            field=models.ManyToManyField(related_name='careers', to='uvaq.studyplan'),
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=125)),
                ('description', models.CharField(max_length=255)),
                ('credits', models.PositiveSmallIntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('core_requirement', models.BooleanField(default=False)),
                ('hours_per_week', models.PositiveSmallIntegerField()),
                ('total_hours', models.PositiveSmallIntegerField()),
                ('prerequisites', models.ManyToManyField(blank=True, to='uvaq.subject')),
            ],
        ),
        migrations.CreateModel(
            name='StudyPlanSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.PositiveSmallIntegerField()),
                ('is_required', models.BooleanField(default=True)),
                ('min_grade', models.DecimalField(decimal_places=2, default=Decimal('6.00'), max_digits=5)),
                ('study_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uvaq.studyplan')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uvaq.subject')),
            ],
            options={
                'unique_together': {('study_plan', 'subject')},
            },
        ),
        migrations.AddField(
            model_name='studyplan',
            name='subjects',
            field=models.ManyToManyField(through='uvaq.StudyPlanSubject', to='uvaq.subject'),
        ),
        migrations.AddField(
            model_name='student',
            name='subjects',
            field=models.ManyToManyField(related_name='students', through='uvaq.Enrollment', to='uvaq.subject'),
        ),
        migrations.CreateModel(
            name='ProfessorSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(max_length=10)),
                ('classroom', models.CharField(max_length=20)),
                ('schedule', models.CharField(max_length=100)),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uvaq.academicperiod')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uvaq.professor')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uvaq.subject')),
            ],
            options={
                'unique_together': {('professor', 'subject', 'period', 'group')},
            },
        ),
        migrations.AddField(
            model_name='professor',
            name='courses_taught',
            field=models.ManyToManyField(related_name='professors', through='uvaq.ProfessorSubject', to='uvaq.subject'),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uvaq.subject'),
        ),
        migrations.CreateModel(
            name='UserUniversity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_identifier', models.CharField(max_length=50)),
                ('university_identifier', models.CharField(default='2b0020f3-9d2f-4a14-b5b2-dcbad34754b5', max_length=50)),
                ('user_roles', models.CharField(choices=[('student', 'Student'), ('services', 'Services'), ('professor', 'Professor'), ('tester', 'Tester')], max_length=20)),
                ('mandatory_notification', models.CharField(choices=[('student', 'Student'), ('services', 'Services'), ('professor', 'Professor'), ('tester', 'Tester')], max_length=20)),
                ('enrollment_date', models.DateField()),
                ('campus', models.CharField(blank=True, max_length=100)),
                ('type', models.CharField(blank=True, choices=[('secondary', 'Secondary'), ('high_school', 'High School'), ('degree', 'Degree'), ('engineer', 'Engineer'), ('specialty', 'Specialty'), ('master', 'Master'), ('doctorate', 'Doctorate')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('last_access', models.DateTimeField(blank=True, null=True)),
                ('career', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='uvaq.career')),
                ('optional_notifications', models.ManyToManyField(blank=True, related_name='optional_for_users', to='uvaq.notification')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uvaq.universityinfo')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_university', to='uvaq.personalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plate_number', models.CharField(max_length=20, unique=True)),
                ('model', models.CharField(max_length=50)),
                ('vehicle_type', models.CharField(max_length=50)),
                ('color', models.CharField(max_length=20)),
                ('year', models.PositiveSmallIntegerField()),
                ('make', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='uvaq.personalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_number', models.CharField(max_length=50, unique=True)),
                ('provider', models.CharField(max_length=100)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurance_info', to='uvaq.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='AccessControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_level', models.CharField(blank=True, max_length=50)),
                ('access_hours', models.CharField(blank=True, max_length=50)),
                ('valid_from', models.DateField()),
                ('valid_until', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('areas_allowed', models.TextField()),
                ('biometric_type', models.CharField(max_length=100)),
                ('data', models.TextField()),
                ('device_type', models.CharField(max_length=100)),
                ('device_id', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_control', to='uvaq.personalinformation')),
                ('vehicle', models.ManyToManyField(blank=True, related_name='access_control', to='uvaq.vehicle')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='academicrecord',
            unique_together={('student', 'period')},
        ),
        migrations.AlterUniqueTogether(
            name='enrollment',
            unique_together={('student', 'subject', 'period')},
        ),
    ]
